{
  "servers": {
    "fileSystem": {
      "command": "npm run file-server",
      "type": "stdio",
      "endpoints": {
        "read": {
          "description": "üìñ Read contents of a file",
          "parameters": {
            "path": {
              "type": "string",
              "description": "Path to the file to read"
            }
          },
          "returns": {
            "type": "object",
            "properties": {
              "content": { "type": "string" },
              "formatting": {
                "type": "object",
                "properties": {
                  "header": {
                    "type": "string",
                    "default": "üìñ File Contents:"
                  },
                  "separator": {
                    "type": "string",
                    "default": "---------------"
                  }
                }
              }
            },
            "description": "The contents of the file with formatting"
          }
        },
        "list": {
          "description": "üìÇ List contents of a directory with metadata",
          "parameters": {
            "path": {
              "type": "string",
              "description": "Path to the directory to list"
            }
          },
          "returns": {
            "type": "object",
            "properties": {
              "header": {
                "type": "string",
                "default": "üìÇ Directory Contents:"
              },
              "separator": {
                "type": "string",
                "default": "-------------------"
              },
              "files": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "icon": { "type": "string", "default": "üìÑ" },
                    "name": { "type": "string" },
                    "size": { "type": "number" },
                    "created": { "type": "string" },
                    "modified": { "type": "string" },
                    "isDirectory": { "type": "boolean" },
                    "isFile": { "type": "boolean" },
                    "path": { "type": "string" }
                  }
                }
              }
            },
            "description": "List of files and directories with formatting"
          }
        },
        "search": {
          "description": "üîç Search for files in a directory",
          "parameters": {
            "path": {
              "type": "string",
              "description": "Directory to search in"
            },
            "pattern": {
              "type": "string",
              "description": "Search pattern to match against file names"
            }
          },
          "returns": {
            "type": "object",
            "properties": {
              "header": { "type": "string", "default": "üîç Search Results:" },
              "separator": { "type": "string", "default": "---------------" },
              "files": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "icon": { "type": "string", "default": "üìÑ" },
                    "name": { "type": "string" },
                    "path": { "type": "string" }
                  }
                }
              }
            },
            "description": "List of matching files with formatting"
          }
        },
        "logs": {
          "description": "üìã View server logs",
          "parameters": {},
          "returns": {
            "type": "object",
            "properties": {
              "header": { "type": "string", "default": "üìã Server Logs:" },
              "separator": { "type": "string", "default": "-------------" },
              "content": { "type": "string" }
            },
            "description": "Server log contents with formatting"
          }
        }
      }
    },

    "weatherService": {
      "command": "C:\\Program Files\\nodejs\\node.exe",
      "args": ["build\\weather\\service.js"],
      "type": "stdio",
      "endpoints": {
        "health": {
          "description": "‚úÖ Service health check",
          "parameters": {},
          "returns": {
            "type": "object",
            "properties": {
              "status": { "type": "string" },
              "service": { "type": "string" },
              "port": { "type": "number" }
            }
          }
        },
        "current": {
          "description": "üå°Ô∏è Get current weather (service). Returns { source, note?, data }",
          "parameters": {
            "city": { "type": "string", "description": "City name" }
          },
          "returns": {
            "type": "object",
            "properties": {
              "source": { "type": "string" },
              "note": { "type": "string" },
              "data": {
                "type": "object",
                "properties": {
                  "city": { "type": "string" },
                  "temperature": { "type": ["number", "null"] },
                  "windSpeed": { "type": ["number", "null"] },
                  "windDirection": { "type": ["number", "null"] },
                  "conditions": { "type": ["string", "null"] },
                  "time": { "type": ["string", "null"] },
                  "humidity": { "type": ["number", "null"] }
                }
              }
            }
          }
        },
        "forecast": {
          "description": "üìÖ Get 5-day forecast (service). Returns { source, note?, data }",
          "parameters": {
            "city": { "type": "string", "description": "City name" }
          },
          "returns": {
            "type": "object",
            "properties": {
              "source": { "type": "string" },
              "note": { "type": "string" },
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "date": { "type": "string" },
                    "temperature": {
                      "type": "object",
                      "properties": {
                        "min": { "type": ["number", "null"] },
                        "max": { "type": ["number", "null"] }
                      }
                    },
                    "conditions": { "type": ["string", "null"] }
                  }
                }
              }
            }
          }
        },
        "logs": {
          "description": "üìã View service logs",
          "parameters": {},
          "returns": {
            "type": "object",
            "properties": {
              "content": { "type": "string" }
            }
          }
        }
      }
    }
  }
}
